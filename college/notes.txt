// entry controlled & exit controlled

// working of string \0

// pointer arithmetic

#include<math.h>

//     char name[] = "Young Robert Baratheon"; why it says 23 
//     printf("the num %f is", 66.666); // out is 66.666000 why
//     printf("%f \n",8.9 + 7.1);
//     printf("%f \n",2.2*5.0);
//     printf("%f \n",6.0/5.0);


//     printf("_hello\"world\n"); // the role of '/'
/*

    double diff;
    printf("Enter the difference: ");
    scanf("%lf", &diff);
    printf("Your difference is %f\n",diff);
    double
*/
int a=10, b, c, d;
    printf("a is %d", a);
    b = --a;
    c = a++;
    d = ++a;

    printf("\nNow a is %d",a);
    printf("\nb is %d",b);
    printf("\nc is %d",c);
    printf("\nd is %d",d);
    printf("\nNow a is %d",a);

name and type of operators
//Relational Operators (Comparison Ope): <, >, <=, >=m(first priority), ==, != 
 //relational expression. L to R


    int x=10, y=5,result2;
    result2=(x>y) || x++;
    printf("\n%d",result);
    printf("\n%d",x);
why x is 10(bcz || perhaps)

    printf("\nBitwise XOR %d",a^b);
    a = 10, b= 5;

int a=10, b=6;
    printf("\nBitwise NOT %d",~a);
    printf("\n%d",a&b && b+1 ||0);
    // -(a+1)

int a = (5,4);      //comma as an operator. so a =4
/*  int b = 5,4;      will show error
    printf("\n%d",b);   */ // what does it mean ()

int a=8, b;      
    b=(a++, ++a, a>>2);
    printf("\na is %d",a); 
    printf("\nb is %d",b);  
int a = 1, b;
    b = (++a, a--, a++, a<<2);
    printf("\na is %d",a); 
    printf("\nb is %d",b);
int a= 4, b;
    b = (a--, a--, a++, a<<2 );
    printf("\na is %d",a); 
    printf("\nb is %d",b);


int a=0, b=1, c=-1;
    printf("\n%d",--a*(5+b)/2-c++*b);

    float c;
    printf("\n%3.2f",c);

// unformated input functions
// getchar
// getch
// getche
// gets
#include<stdio.h>
#include<conio.h>
int main() { 
    // char ch;
    // ch = getchar();
    // ch = getch();
    // ch = getche();
    char ch[10];
    gets(ch);
    

    printf("%s", ch);
    getch();

    return 0;
}

#include<stdio.h>
int main()
{
    int mark;
    printf("Enter mark: ");
    scanf("%d",&mark);

    if(mark > 90)
    printf("S");
    else if(mark > 80)
    printf("A");
    else if(mark > 70)
    printf("B");
    else if(mark > 60)
    printf("C");
    else if(mark > 40)
    printf("D");
    else if(mark > 30)
    printf("E");
    else
    printf("I'm sorry");

    return 0;
}

#include<stdio.h>
int main() { 
    int n1, n2;
    char ch;

    printf("Enter the number: ");
    scanf("%d%d",&n1, &n2);
    printf("Enter the operator: "); // why the operaotor has to be first?
    scanf("%c", &ch);

    switch(ch) {
        case '+':
            printf("%d", n1+n2);
            break;
        case '-':
            printf("%d", n1-n2);
            break;
        case '*':
            printf("%d", n1*n2);
            break;
        case '/':
            printf("%d", n1/n2);
            break;
        
        default:
            printf("enter valid ope");
            break;
    }

    return 0;
}

for(i=1; i<5; i=i/2)
    {
        printf("\n%d",i);
        
    } // How to close it when it reaches cetain limit

AB
CD
EF
G 

22
333
4444

#include<stdio.h>
int main()
{
    int i=0;
    char ch='a';
    while(ch<127 && i==0) {
        printf("\n%d",ch);
        ch--;
    }
    printf("\nEND");
    return 0;
}

do while 

#include<stdio.h>
int main()
{
    int i=0, j=1;

    while(i<3)
    {
        while(j<=3)
        {
        }
    }
    printf("%d%d",i++,j++);
    return 0;
}

int i=1, j=3;

    do{
        do{
            printf("%d",j);
            j--;
        }
        while(j>0);     //Here it breaks
        i++;
        printf("%d",i);
    } while (i<4);

#include<stdio.h>
int main()
{
    int i=1, j=3;

    do
    {
        do
        {
            printf("%d",j--);
            
        }
        while(j>0);
        
        printf("%d",i++);
    } while (i<4);
    return 0;    
}

83 - 87
printing pattern using while

second smallest/largest, fib, fact